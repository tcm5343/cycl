name: Package Reusable Workflow

on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: "3.11"
      deploy-prod:
        required: false
        type: string
        default: "false"

jobs:
  release:
    if: ${{ inputs.deploy-prod == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.new_tag }}
    permissions:
      contents: write  # needed for tag creation
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'  # fetches tags

      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297  # v1.71.0
        env:
          DEFAULT_BUMP: patch
          GIT_API_TAGGING: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRERELEASE_SUFFIX: b
          PRERELEASE: ${{ inputs.deploy-prod == 'false' }}
          WITH_V: true

      - name: Create release from tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.tag.outputs.new_tag }}
        run: |
          gh release create "${tag}" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${tag#v}" \
              --generate-notes

  build:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout the tagged version
        run: git checkout refs/tags/${{ needs.release.outputs.tag }}

      - uses: actions/setup-python@v5
        with:
          python-version: "${{ inputs.python-version }}"
          cache: 'pip'

      - name: Restore cached venv
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: ./.venv
          key: ${{ runner.os }}-dist-venv-${{ hashFiles('**/pyproject.toml') }}

      - name: Install build dependencies
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          ./.venv/bin/python -m pip install .[dist]

      - name: Cache venv
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ./.venv
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}

      - name: Build distribution
        run: ./.venv/bin/python -m build

      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pypi-artifact
          path: dist/
          retention-days: 7

  deploy-test:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: test
      url: ${{ vars.PYPI_PROJECT_URL }}
    permissions:
      id-token: write   # needed for publishing to PyPI
      contents: read
    steps:
      - name: Download built distribution
        uses: actions/download-artifact@v4
        with:
          name: pypi-artifact
          path: dist/

      - name: Publish distribution
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc  # v1.12.4
        with:
          repository-url: ${{ vars.PYPI_REPOSITORY_URL }}
          verbose: true
          # per issue, https://github.com/pypa/gh-action-pypi-publish/issues/166, reusable
          # workflows are not supported for trusted publishing
          password: ${{ secrets.PYPI_PASSWORD }}
          attestations: "false"

  deploy-prod:
      if: ${{ inputs.deploy-prod == 'true' }}
      needs: deploy-test
      runs-on: ubuntu-latest
      environment:
        name: prod
        url: ${{ vars.PYPI_PROJECT_URL }}
      permissions:
        id-token: write   # needed for publishing to PyPI
      steps:
        - name: Download built distribution
          uses: actions/download-artifact@v4
          with:
            name: pypi-artifact
            path: dist/

        - name: Publish distribution
          uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc  # v1.12.4
          with:
            # per issue, https://github.com/pypa/gh-action-pypi-publish/issues/166, reusable
            # workflows are not supported for trusted publishing
            password: ${{ secrets.PYPI_PASSWORD }}
            attestations: "false"
